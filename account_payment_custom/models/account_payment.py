# -*- coding: utf-8 -*-import osimport base64from odoo import models, fields, api, _from odoo.exceptions import UserError, ValidationErrorfrom odoo.addons.excel_liberary import load_workbookclass AccountPayment(models.Model):    _inherit = "account.payment"    manual_check_no = fields.Char(string="Check Number", required=False, )    ref = fields.Text(string="Description")    qid_number = fields.Char(string="QID Number")    case_name = fields.Char(string="Case Name")    # case_number = fields.Char(string="Case Number")    reference_sequence = fields.Char(string="Reference Sequence")    def action_print_payment_method_check(self):        return self.env.ref('account_payment_custom.report_payment_method_action_new'). \            report_action(self)    def print_personal_cheque(self):        for rec in self:            template_name = 'personal_cheque'            full_path = os.path.realpath(__file__)            path = full_path.split('/')            path = path[0:-2]            path = '/'.join(path)            c_p = path + '/static/docs/'            if not c_p:                raise ValidationError('Check addon paths on configuration file')            file_path = c_p + 'personal_cheque.xlsx'            wb = load_workbook(file_path)            ws = wb.active            partner_name = rec.partner_id.name if rec.partner_id else ''            # amount_str = '**' + str(format(float(rec.amount), '{0:,.0f}')) + '**'            amount_str = '**' + str("{0:,.0f}".format(round(rec.amount, 2))) + '**'            amount_in_words = rec.currency_id.with_context(lang='ar_001').amount_to_text(rec.amount)            # Check Data            ws['J4'] = rec.date.strftime('%d/%m/%Y')            ws['B6'] = partner_name            ws['J7'] = amount_str            ws['B8'] = amount_in_words + " قطري فقط لا غير"            wb.save(file_path)            with open(file_path, 'rb') as fh:                buf = fh.read()            b64_xlsx = base64.b64encode(buf)            res = self.env['ir.attachment'].create({                'name': template_name + ' ' + partner_name + '.xlsx',  # Add the file extension                'datas': b64_xlsx,                'store_fname': template_name + ' ' + partner_name + '.xlsx'  # Add the file extension            })            url = '/web/content/%s?download=true' % res.id            return {                'type': 'ir.actions.act_url',                'url': url,                'target': 'new',            }    def print_company_cheque(self):        for rec in self:            template_name = 'company_cheque'            full_path = os.path.realpath(__file__)            path = full_path.split('/')            path = path[0:-2]            path = '/'.join(path)            c_p = path + '/static/docs/'            if not c_p:                raise ValidationError('Check addon paths on configuration file')            file_path = c_p + 'company_cheque.xlsx'            wb = load_workbook(file_path)            ws = wb.active            partner_name = rec.partner_id.name if rec.partner_id else ''            # amount_str = '**' + str(float(rec.amount)) + '**'            amount_str = '**' + str("{0:,.0f}".format(round(rec.amount, 2))) + '**'            amount_in_words = rec.currency_id.with_context(lang='en_US').amount_to_text(rec.amount)            # Check Data            ws['J4'] = rec.date.strftime('%d/%m/%Y')            ws['B6'] = partner_name            ws['J7'] = amount_str            amount_in_words = amount_in_words.replace("Rial", "Qatari Rial")            ws['B8'] = amount_in_words + " Only "            wb.save(file_path)            with open(file_path, 'rb') as fh:                buf = fh.read()            b64_xlsx = base64.b64encode(buf)            res = self.env['ir.attachment'].create({                'name': template_name + ' ' + partner_name + '.xlsx',  # Add the file extension                'datas': b64_xlsx,                'store_fname': template_name + ' ' + partner_name + '.xlsx'  # Add the file extension            })            url = '/web/content/%s?download=true' % res.id            return {                'type': 'ir.actions.act_url',                'url': url,                'target': 'new',            }